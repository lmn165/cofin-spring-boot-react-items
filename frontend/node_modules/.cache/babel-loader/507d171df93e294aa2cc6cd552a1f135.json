{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\ho\\\\cloud\\\\frontend\\\\src\\\\features\\\\user\\\\components\\\\UserAdd.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { joinPage } from 'features/user/reducer/userSlice';\nimport { useForm } from 'react-hook-form';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserAdd() {\n  _s();\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const [join, setJoin] = useState({\n    username: '',\n    password: '',\n    email: '',\n    name: '',\n    regDate: new Date().toLocaleDateString()\n  });\n  const {\n    username,\n    password,\n    email,\n    name\n  } = join;\n\n  const handleClick = async data => {\n    await dispatch(joinPage(data));\n    alert(`${join.username} 회원가입 환영`);\n    history.push('/login');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD68C\\uC6D0 \\uAC00\\uC785\\uC744 \\uD658\\uC601\\uD569\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(handleClick),\n      method: \"POST\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"\\uC544\\uC774\\uB514 : \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"username\",\n              name: \"username\",\n              \"aria-invalid\": errors.username ? \"true\" : \"false\",\n              ...register('username', {\n                required: true,\n                maxlength: 10\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 27\n            }, this), errors.username && errors.username.type === \"required\" && /*#__PURE__*/_jsxDEV(Span, {\n              role: \"alert\",\n              children: \"This is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 23\n            }, this), errors.username && errors.username.type === \"maxLength\" && /*#__PURE__*/_jsxDEV(Span, {\n              role: \"alert\",\n              children: \"Max length exceeded\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"1~15\\uC790\\uB9AC \\uC774\\uB0B4\\uC758 \\uC601\\uBB38\\uACFC \\uC22B\\uC790\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"\\uC774\\uBA54\\uC77C : \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email\",\n              name: \"email\",\n              \"aria-invalid\": errors.email ? \"true\" : \"false\",\n              ...register('email', {\n                required: true,\n                maxLength: 30\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"\\uBE44\\uBC00 \\uBC88\\uD638 : \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password\",\n              name: \"password\",\n              \"aria-invalid\": errors.password ? \"true\" : \"false\",\n              ...register('password', {\n                required: true,\n                maxLength: 30\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this), errors.password && errors.password.type === \"required\" && /*#__PURE__*/_jsxDEV(Span, {\n              role: \"alert\",\n              children: \"This is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 21\n            }, this), errors.password && errors.password.type === \"maxLength\" && /*#__PURE__*/_jsxDEV(Span, {\n              role: \"alert\",\n              children: \"Max length exceeded\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"\\uC774\\uB984 : \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"name\",\n              name: \"name\",\n              \"aria-invalid\": errors.name ? \"true\" : \"false\",\n              ...register('name', {\n                required: true,\n                maxLength: 30\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            onClick: e => handleSubmit(e),\n            value: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserAdd, \"lynMAZC/uC0mFV3uYWIPdSrr5BU=\", false, function () {\n  return [useHistory, useDispatch, useForm];\n});\n\n_c = UserAdd;\nconst Span = styled.span`\n    color: red;\n    font-weight: bold;\n`;\n_c2 = Span;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UserAdd\");\n$RefreshReg$(_c2, \"Span\");","map":{"version":3,"sources":["C:/Users/ASUS/ho/cloud/frontend/src/features/user/components/UserAdd.js"],"names":["React","useState","useCallback","useHistory","useDispatch","joinPage","useForm","styled","UserAdd","history","dispatch","register","handleSubmit","formState","errors","join","setJoin","username","password","email","name","regDate","Date","toLocaleDateString","handleClick","data","alert","push","required","maxlength","type","maxLength","e","Span","span"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport { useHistory  } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { joinPage } from 'features/user/reducer/userSlice'\r\nimport { useForm } from 'react-hook-form'\r\nimport styled from 'styled-components'\r\n\r\n\r\nexport default function UserAdd() {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n    const [join, setJoin] = useState({\r\n        username:'', password:'', email:'', name:'', regDate: new Date().toLocaleDateString()\r\n    })\r\n    const {username, password, email, name} = join\r\n    const handleClick = async (data) => {\r\n        await dispatch(joinPage(data))\r\n        alert(`${join.username} 회원가입 환영`)\r\n        history.push('/login')\r\n\r\n  }\r\n  return (\r\n    <div>\r\n         <h1>회원 가입을 환영합니다.</h1>\r\n    <form onSubmit={handleSubmit(handleClick)} method='POST'>\r\n        <ul>\r\n            <li>\r\n                <label>\r\n                    아이디 : <input type=\"text\" id=\"username\" name=\"username\"\r\n                    aria-invalid={errors.username ? \"true\" : \"false\"}\r\n                    {...register('username', { required: true, maxlength: 10})}\r\n                    />\r\n                    {errors.username && errors.username.type === \"required\" && (\r\n                      <Span role=\"alert\">This is required</Span>\r\n                    )}\r\n                    {errors.username && errors.username.type === \"maxLength\" && (\r\n                      <Span role=\"alert\">Max length exceeded</Span>\r\n                    )}\r\n                </label>\r\n                <small>1~15자리 이내의 영문과 숫자</small>\r\n            </li>\r\n            <li>\r\n                <label>\r\n                    이메일 : <input type=\"email\" id=\"email\" name=\"email\"\r\n                    aria-invalid={errors.email ? \"true\" : \"false\"}\r\n                    {...register('email', { required: true, maxLength: 30 })}\r\n                  />\r\n                </label>\r\n            </li>\r\n            <li>\r\n                <label>\r\n                    비밀 번호 : <input type=\"password\" id=\"password\" name=\"password\" \r\n                    aria-invalid={errors.password ? \"true\" : \"false\"}\r\n                    {...register('password', { required: true, maxLength: 30 })}\r\n                  />\r\n                  {errors.password && errors.password.type === \"required\" && (\r\n                    <Span role=\"alert\">This is required</Span>\r\n                  )}\r\n                  {errors.password && errors.password.type === \"maxLength\" && (\r\n                    <Span role=\"alert\">Max length exceeded</Span>\r\n                  )}\r\n                </label>\r\n            </li>\r\n            <li>\r\n                <label>\r\n                    이름 : <input type=\"text\" id=\"name\" name=\"name\" \r\n                    aria-invalid={errors.name ? \"true\" : \"false\"}\r\n                    {...register('name', { required: true, maxLength: 30 })}\r\n                    />\r\n                </label>\r\n            </li>\r\n           \r\n            <li>\r\n                <input type=\"submit\" onClick={ e => handleSubmit(e)} value=\"회원가입\"/>\r\n            </li>\r\n\r\n        </ul>\r\n    </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Span = styled.span`\r\n    color: red;\r\n    font-weight: bold;\r\n`"]},"metadata":{},"sourceType":"module"}