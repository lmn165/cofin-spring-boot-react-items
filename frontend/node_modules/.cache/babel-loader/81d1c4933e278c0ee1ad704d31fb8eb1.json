{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\ho\\\\cloud\\\\frontend\\\\src\\\\features\\\\user\\\\containers\\\\UserAdd.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { joinPage } from 'features/user/reducer/userSlice';\nimport { useForm } from 'react-hook-form';\nimport styled from 'styled-components';\nimport Layout from 'features/common/components/Layout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserAdd() {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm(); // history.push('/login')\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(Main, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD68C\\uC6D0 \\uAC00\\uC785\\uC744 \\uD658\\uC601\\uD569\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        method: \"POST\",\n        onSubmit: handleSubmit(async data => await dispatch(joinPage({ ...data,\n          regDate: new Date().toLocaleDateString()\n        }))),\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"\\uC544\\uC774\\uB514 : \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"username\",\n                name: \"username\",\n                \"aria-invalid\": errors.username ? \"true\" : \"false\",\n                ...register('username', {\n                  required: true,\n                  maxlength: 10\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 27\n              }, this), errors.username && errors.username.type === \"required\" && /*#__PURE__*/_jsxDEV(Span, {\n                role: \"alert\",\n                children: \"This is required\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 23\n              }, this), errors.username && errors.username.type === \"maxLength\" && /*#__PURE__*/_jsxDEV(Span, {\n                role: \"alert\",\n                children: \"Max length exceeded\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: \"1~15\\uC790\\uB9AC \\uC774\\uB0B4\\uC758 \\uC601\\uBB38\\uACFC \\uC22B\\uC790\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"\\uC774\\uBA54\\uC77C : \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                id: \"email\",\n                name: \"email\",\n                \"aria-invalid\": errors.email ? \"true\" : \"false\",\n                ...register('email', {\n                  required: true,\n                  maxLength: 30\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"\\uBE44\\uBC00 \\uBC88\\uD638 : \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                id: \"password\",\n                name: \"password\",\n                \"aria-invalid\": errors.password ? \"true\" : \"false\",\n                ...register('password', {\n                  required: true,\n                  maxLength: 30\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 29\n              }, this), errors.password && errors.password.type === \"required\" && /*#__PURE__*/_jsxDEV(Span, {\n                role: \"alert\",\n                children: \"This is required\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 21\n              }, this), errors.password && errors.password.type === \"maxLength\" && /*#__PURE__*/_jsxDEV(Span, {\n                role: \"alert\",\n                children: \"Max length exceeded\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"\\uC774\\uB984 : \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"name\",\n                name: \"name\",\n                \"aria-invalid\": errors.name ? \"true\" : \"false\",\n                ...register('name', {\n                  required: true,\n                  maxLength: 30\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 26\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              onClick: e => handleSubmit(e),\n              value: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserAdd, \"h803nG4XeTddS25Sw5zpNT9ipSU=\", false, function () {\n  return [useDispatch, useForm];\n});\n\n_c = UserAdd;\nconst Span = styled.span`\n    color: red\n`;\n_c2 = Span;\nconst Main = styled.div`\nwidth: 500px;\nmargin: 0 auto;\ntext-decoration:none\ntext-align: center;\n`;\n_c3 = Main;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"UserAdd\");\n$RefreshReg$(_c2, \"Span\");\n$RefreshReg$(_c3, \"Main\");","map":{"version":3,"sources":["C:/Users/ASUS/ho/cloud/frontend/src/features/user/containers/UserAdd.js"],"names":["React","useDispatch","joinPage","useForm","styled","Layout","UserAdd","dispatch","register","handleSubmit","formState","errors","data","regDate","Date","toLocaleDateString","username","required","maxlength","type","email","maxLength","password","name","e","Span","span","Main","div"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { joinPage } from 'features/user/reducer/userSlice'\r\nimport { useForm } from 'react-hook-form'\r\nimport styled from 'styled-components'\r\nimport Layout from 'features/common/components/Layout';\r\n\r\nexport default function UserAdd() {\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n    // history.push('/login')\r\n  return (\r\n    <Layout>\r\n    <Main>\r\n         <h1>회원 가입을 환영합니다.</h1>\r\n    <form method='POST' onSubmit={\r\n        handleSubmit(async(data) => await dispatch(joinPage({...data, \r\n                                    regDate: new Date().toLocaleDateString()}))\r\n                                    )}>\r\n        <ul>\r\n            <li>\r\n                <label>\r\n                    아이디 : <input type=\"text\" id=\"username\" name=\"username\"\r\n                    aria-invalid={errors.username ? \"true\" : \"false\"}\r\n                    {...register('username', { required: true, maxlength: 10})}\r\n                    />\r\n                    {errors.username && errors.username.type === \"required\" && (\r\n                      <Span role=\"alert\">This is required</Span>\r\n                    )}\r\n                    {errors.username && errors.username.type === \"maxLength\" && (\r\n                      <Span role=\"alert\">Max length exceeded</Span>\r\n                    )}\r\n                </label>\r\n                <small>1~15자리 이내의 영문과 숫자</small>\r\n            </li>\r\n            <li>\r\n                <label>\r\n                    이메일 : <input type=\"email\" id=\"email\" name=\"email\"\r\n                    aria-invalid={errors.email ? \"true\" : \"false\"}\r\n                    {...register('email', { required: true, maxLength: 30 })}\r\n                  />\r\n                </label>\r\n            </li>\r\n            <li>\r\n                <label>\r\n                    비밀 번호 : <input type=\"password\" id=\"password\" name=\"password\" \r\n                    aria-invalid={errors.password ? \"true\" : \"false\"}\r\n                    {...register('password', { required: true, maxLength: 30 })}\r\n                  />\r\n                  {errors.password && errors.password.type === \"required\" && (\r\n                    <Span role=\"alert\">This is required</Span>\r\n                  )}\r\n                  {errors.password && errors.password.type === \"maxLength\" && (\r\n                    <Span role=\"alert\">Max length exceeded</Span>\r\n                  )}\r\n                </label>\r\n            </li>\r\n            <li>\r\n                <label>\r\n                    이름 : <input type=\"text\" id=\"name\" name=\"name\" \r\n                    aria-invalid={errors.name ? \"true\" : \"false\"}\r\n                    {...register('name', { required: true, maxLength: 30 })}\r\n                    />\r\n                </label>\r\n            </li>\r\n           \r\n            <li>\r\n                <input type=\"submit\" onClick={ e => handleSubmit(e)} value=\"회원가입\"/>\r\n            </li>\r\n\r\n        </ul>\r\n    </form>\r\n    </Main>\r\n    </Layout>\r\n  );\r\n}\r\nconst Span = styled.span`\r\n    color: red\r\n`\r\nconst Main = styled.div`\r\nwidth: 500px;\r\nmargin: 0 auto;\r\ntext-decoration:none\r\ntext-align: center;\r\n`"]},"metadata":{},"sourceType":"module"}