{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { userAPI } from 'features/user';\n\nconst userJoinPage = async x => {\n  const res = await userAPI.userJoin(x);\n  return res.data;\n};\n\nconst EXIST = async x => {\n  const res = await userAPI.exist(x);\n  return res.data;\n};\n\n_c = EXIST;\n\nconst userDetailPage = async x => {\n  const res = await userAPI.userDetail(x);\n  return res.data;\n};\n\nconst userListPage = async () => {\n  const res = await userAPI.userList();\n  return res.data;\n};\n\nconst userLoginPage = async x => {\n  const res = await userAPI.userLogin(x);\n  return res.data;\n};\n\nconst userModifyPage = async x => {\n  const res = await userAPI.userModify(x);\n  return res.data;\n};\n\nconst userRemovePage = async x => {\n  const res = await userAPI.userRemove(x);\n  return res.data;\n};\n\nexport const joinPage = createAsyncThunk('users/join', userJoinPage);\nexport const exist = createAsyncThunk('users/exist', EXIST);\nexport const detailPage = createAsyncThunk('users/dtail', userDetailPage);\nexport const listPage = createAsyncThunk('users/list', userListPage);\nexport const loginPage = createAsyncThunk('users/login', userLoginPage);\nexport const modifyPage = createAsyncThunk('users/modify', userModifyPage);\nexport const removePage = createAsyncThunk('users/remove', userRemovePage); // export const logout = () => {\n// window.localStorage.setItem('sessionUser','')\n// window.location.href='/home'\n// }\n\nconst changeNull = ls => {\n  for (const i of ls) {\n    document.getElementById(i).value = '';\n  }\n};\n\nconst userSlice = createSlice({\n  name: 'users',\n  initialState: {\n    userState: {\n      username: '',\n      password: '',\n      email: '',\n      name: '',\n      regDate: ''\n    },\n    usersState: [],\n    type: '',\n    keyword: '',\n    params: {}\n  },\n  reducers: {},\n  extraReducers: {\n    [joinPage.fulfilled]: (state, action) => {\n      state.userState = action.payload;\n      window.location.href = `/login`;\n    },\n    [exist.fulfilled]: (state, action) => {\n      if (action.payload) {\n        window.location.href = '//add';\n      } else {\n        alert(`사용가능함`);\n      }\n    },\n    [detailPage.fulfilled]: (state, {\n      meta,\n      payload\n    }) => {\n      state.userState = payload;\n    },\n    [listPage.fulfilled]: (state, {\n      meta,\n      payload\n    }) => {\n      state.usersState = payload;\n    },\n    [loginPage.fulfilled]: (state, {\n      meta,\n      payload\n    }) => {\n      state.userState = payload;\n      window.localStorage.setItem('sessionUser', JSON.stringify(payload));\n\n      if (payload.username != null) {\n        alert(`${payload.name}님 환영합니다`);\n        window.location.href = `/detail`;\n      } else {\n        alert('아이디, 비번 오류로 로그인 실패  ');\n        changeNull(['username', 'password']);\n      }\n    },\n    [modifyPage.fulfilled]: (state, action) => {\n      // state.userState = action.payload \n      alert(`회원 정보 수정 성공 ${action.data}`);\n      window.localStorage.setItem('sessionUser', JSON.stringify(action.payload));\n      window.location.href = `/detail`;\n    },\n    [removePage.fulfilled]: (state, {\n      meta,\n      payload\n    }) => {\n      window.localStorage.removeItem('sessinUser');\n      window.localStorage.clear();\n      window.location.href = '/home';\n    }\n  }\n});\nexport const currentUserState = state => state.users.userState;\nexport const currentUsersState = state => state.users.usersState;\nexport const currentUserParam = state => state.users.param;\nexport default userSlice.reducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"EXIST\");","map":{"version":3,"sources":["C:/Users/ASUS/ho/cloud/frontend/src/features/user/reducer/userSlice.js"],"names":["createAsyncThunk","createSlice","userAPI","userJoinPage","x","res","userJoin","data","EXIST","exist","userDetailPage","userDetail","userListPage","userList","userLoginPage","userLogin","userModifyPage","userModify","userRemovePage","userRemove","joinPage","detailPage","listPage","loginPage","modifyPage","removePage","changeNull","ls","i","document","getElementById","value","userSlice","name","initialState","userState","username","password","email","regDate","usersState","type","keyword","params","reducers","extraReducers","fulfilled","state","action","payload","window","location","href","alert","meta","localStorage","setItem","JSON","stringify","removeItem","clear","currentUserState","users","currentUsersState","currentUserParam","param","reducer"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { userAPI } from 'features/user';\r\n\r\nconst userJoinPage = async (x) => {\r\n   const res = await userAPI.userJoin(x)\r\n   return res.data\r\n}\r\nconst EXIST = async (x) => {\r\n  const res = await userAPI.exist(x)\r\n  return res.data\r\n}\r\nconst userDetailPage = async (x) => {\r\n  const res = await userAPI.userDetail(x)\r\n  return res.data\r\n}\r\nconst userListPage = async () => {\r\n  const res = await userAPI.userList()\r\n  return res.data\r\n}\r\nconst userLoginPage = async (x) => {\r\n  const res = await userAPI.userLogin(x) \r\n  return res.data\r\n}\r\nconst userModifyPage = async (x) => {\r\n  const res = await userAPI.userModify(x)\r\n  return res.data\r\n}\r\nconst userRemovePage = async (x) => {\r\n  const res = await userAPI.userRemove(x)\r\n  return res.data\r\n}\r\n\r\nexport const joinPage = createAsyncThunk('users/join', userJoinPage)\r\nexport const exist = createAsyncThunk('users/exist', EXIST)\r\nexport const detailPage = createAsyncThunk('users/dtail', userDetailPage)\r\nexport const listPage = createAsyncThunk('users/list', userListPage)\r\nexport const loginPage = createAsyncThunk('users/login', userLoginPage)\r\nexport const modifyPage = createAsyncThunk('users/modify', userModifyPage)\r\nexport const removePage = createAsyncThunk('users/remove', userRemovePage)\r\n// export const logout = () => {\r\n  // window.localStorage.setItem('sessionUser','')\r\n  // window.location.href='/home'\r\n// }\r\n\r\nconst changeNull = ls =>{\r\n  for(const i of ls ){\r\n    document.getElementById(i).value = ''\r\n  }\r\n}\r\nconst userSlice = createSlice({\r\n  name: 'users',\r\n  initialState: {\r\n    userState: {\r\n      username:'', password:'', email:'', name:'', regDate: ''\r\n    },\r\n    usersState: [],\r\n    type: '',\r\n    keyword: '',\r\n    params: {}\r\n  },\r\n  reducers: {},\r\n  extraReducers: {\r\n    [joinPage.fulfilled]: ( state, action ) => { \r\n      state.userState = action.payload \r\n      window.location.href = `/login`\r\n    },\r\n    [exist.fulfilled]: ( state, action ) => { \r\n      if(action.payload){window.location.href='//add'}\r\n      else{ alert(`사용가능함`) }\r\n    },\r\n    [detailPage.fulfilled]: ( state, {meta, payload} ) => { state.userState = payload },\r\n    [listPage.fulfilled]: ( state, {meta, payload} ) => { state.usersState = payload },\r\n    [loginPage.fulfilled]: ( state, {meta, payload} ) => {\r\n      state.userState = payload\r\n      window.localStorage.setItem('sessionUser', JSON.stringify(payload))\r\n      if(payload.username != null){\r\n        alert(`${payload.name}님 환영합니다`)\r\n        window.location.href = `/detail`\r\n      }else{\r\n        alert('아이디, 비번 오류로 로그인 실패  ')\r\n        changeNull(['username','password'])\r\n      }\r\n    },\r\n    [modifyPage.fulfilled]: ( state, action ) => { \r\n      // state.userState = action.payload \r\n      alert(`회원 정보 수정 성공 ${action.data}`)\r\n      window.localStorage.setItem('sessionUser', JSON.stringify(action.payload))\r\n      window.location.href = `/detail`\r\n    },\r\n    [removePage.fulfilled]: ( state, {meta, payload }) => { \r\n      window.localStorage.removeItem('sessinUser')\r\n      window.localStorage.clear()\r\n      window.location.href = '/home'\r\n    }\r\n  }\r\n\r\n})\r\nexport const currentUserState = state => state.users.userState\r\nexport const currentUsersState = state => state.users.usersState\r\nexport const currentUserParam = state => state.users.param\r\nexport default userSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}